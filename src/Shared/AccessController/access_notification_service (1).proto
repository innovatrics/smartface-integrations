syntax = "proto3";
package com.skidata.facerec.gprc;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "FacerecAccessNotificationService";

enum AccessNotificationType
{
	UNSPECIFIED_GRANTED = 0;
	GRANTED = 0x01;
	DENIED = 0x02;
	BLACKLIST = 0x04;
    PING = 0x08;
}

message AccessNotificationRequest
{
	bool send_image_data = 1;
	uint32 type_of_access_notification = 2;
}

message AccessNotification
{
	AccessNotificationGranted access_notification_granted = 1;
	string stream_id = 2;
	string face_id = 3;
	google.protobuf.Timestamp face_detected_at = 4;
	google.protobuf.Timestamp sent_at = 5;
	map<string,string> headers = 6;
	AccessNotificationDenied access_notification_denied = 7;
	uint32 type_of_access_notification = 8;
	//this response type cannot be both GRANTED and DENIED (or BLACKLIST) at the same time
	AccessNotificationBlocked access_notification_blocked = 9;
	string tracklet_id = 10;
}

message AccessNotificationGranted
{
	string watchlist_member_external_id = 1;
	string watchlist_external_id = 2;
	string watchlist_member_full_name = 3;
	string watchlist_member_id = 4;
	string watchlist_id = 5;
	string watchlist_full_name = 6;
	int64 match_result_score = 7;
	bytes crop_image = 8;
}

message AccessNotificationDenied
{
	bytes crop_image = 1;
}

message AccessNotificationBlocked
{
	string watchlist_member_full_name = 1;
	string watchlist_member_id = 2;
	string watchlist_id = 3;
	string watchlist_full_name = 4;
	int64 match_result_score = 5;
	bytes crop_image = 6;
}

service AccessNotificationService
{
	rpc GetAccessNotifications(AccessNotificationRequest) returns (stream AccessNotification);
}