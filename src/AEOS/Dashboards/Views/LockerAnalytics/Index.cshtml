@model Innovatrics.SmartFace.Integrations.AeosDashboards.LockerAnalytics
<!DOCTYPE html>
<html>
<head>
    <title>AEOS Locker Analytics</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }
        .group-card {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .stats {
            display: flex;
            gap: 20px;
            margin: 15px 0;
        }
        .stat-box {
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 4px;
            flex: 1;
        }
        .locker-list {
            margin-top: 15px;
        }
        .locker-item {
            padding: 8px;
            border-bottom: 1px solid #eee;
        }
        .locker-item:last-child {
            border-bottom: none;
        }
        .assigned {
            color: #28a745;
        }
        .unassigned {
            color: #dc3545;
        }
        .last-updated {
            text-align: right;
            color: #6c757d;
            font-size: 0.9em;
            margin-bottom: 20px;
        }
        h1 {
            color: #333;
            margin-bottom: 30px;
        }
        h2 {
            color: #444;
            margin-top: 0;
        }
        .least-used {
            background-color: #fff3cd;
            padding: 15px;
            border-radius: 4px;
            margin-top: 15px;
        }
    </style>
    <meta http-equiv="refresh" content="300">
</head>
<body>
    <h1>AEOS Locker Analytics</h1>
    <div class="last-updated">Last updated: @Model.LastUpdated.ToString("yyyy-MM-dd HH:mm:ss")</div>

    @foreach (var group in Model.Groups)
    {
        <div class="group-card">
            <h2>@group.Name</h2>
            <p>@group.Description</p>
            <p>Function: @group.Function | Template: @group.Template</p>

            <div class="stats">
                <div class="stat-box">
                    <strong>Total Lockers:</strong> @group.TotalLockers
                </div>
                <div class="stat-box">
                    <strong>Assigned:</strong> @group.AssignedLockers (@group.AssignmentPercentage.ToString("F1")%)
                </div>
                <div class="stat-box">
                    <strong>Unassigned:</strong> @group.UnassignedLockers (@((100 - group.AssignmentPercentage).ToString("F1"))%)
                </div>
            </div>

            <div class="least-used">
                <h3>Top 10 Least Recently Used Lockers</h3>
                @foreach (var locker in group.LeastUsedLockers)
                {
                    <div class="locker-item">
                        <strong>@locker.Name</strong> (ID: @locker.Id)
                        @if (locker.AssignedTo.HasValue)
                        {
                            <span class="assigned">- Assigned to: @locker.AssignedEmployeeName</span>
                        }
                        else
                        {
                            <span class="unassigned">- Not assigned</span>
                        }
                        - Last used: @(locker.LastUsed?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Never") 
                        (@locker.DaysSinceLastUse.ToString("F1") days ago)
                    </div>
                }
            </div>

            <div class="locker-list">
                <h3>All Lockers</h3>
                @foreach (var locker in group.AllLockers)
                {
                    <div class="locker-item">
                        <strong>@locker.Name</strong> (ID: @locker.Id)
                        @if (locker.AssignedTo.HasValue)
                        {
                            <span class="assigned">- Assigned to: @locker.AssignedEmployeeName</span>
                        }
                        else
                        {
                            <span class="unassigned">- Not assigned</span>
                        }
                        - Last used: @(locker.LastUsed?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Never")
                        (@locker.DaysSinceLastUse.ToString("F1") days ago)
                    </div>
                }
            </div>
        </div>
    }
</body>
</html> 