@model Innovatrics.SmartFace.Integrations.AeosDashboards.LockerAnalytics
<!DOCTYPE html>
<html>
<head>
    <title>AEOS Locker Analytics</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }
        .group-card {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .stats {
            display: flex;
            gap: 20px;
            margin: 15px 0;
        }
        .stat-box {
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 4px;
            flex: 1;
        }
        .locker-list {
            margin-top: 15px;
        }
        .locker-item {
            padding: 8px;
            border-bottom: 1px solid #eee;
        }
        .locker-item:last-child {
            border-bottom: none;
        }
        .assigned {
            color: #28a745;
        }
        .unassigned {
            color: #dc3545;
        }
        .last-updated {
            text-align: right;
            color: #6c757d;
            font-size: 0.9em;
            margin-bottom: 20px;
        }
        h1 {
            color: #333;
            margin-bottom: 30px;
        }
        h2 {
            color: #444;
            margin-top: 0;
        }
        .least-used {
            background-color: #fff3cd;
            padding: 15px;
            border-radius: 4px;
            margin-top: 15px;
        }
        .group-cards-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 24px;
            margin-top: 24px;
        }
        .group-card {
            max-width: 350px;
            min-width: 280px;
            flex: 1 1 320px;
        }
        .dashboard-main {
            display: flex;
            align-items: flex-start;
            gap: 32px;
            margin-top: 24px;
        }
        .global-least-used {
            width: 400px;
            min-width: 320px;
            flex-shrink: 0;
        }
    </style>
    <meta http-equiv="refresh" content="300">
</head>
<body>
    <h1>AEOS Locker Analytics</h1>
    <div class="last-updated">Last updated: @Model.LastUpdated.ToString("yyyy-MM-dd HH:mm:ss")</div>

    <div class="dashboard-main">
        <div class="global-least-used">
            <h2>Global Top 10 Least Recently Used Lockers</h2>
            <div class="least-used">
                @foreach (var locker in Model.GlobalLeastUsedLockers)
                {
                    <div class="locker-item">
                        <strong>@locker.Name</strong>
                        @if (locker.AssignedTo.HasValue)
                        {
                            <span class="assigned"> @locker.AssignedEmployeeName</span>
                        }
                        else
                        {
                            <span class="unassigned"> Not assigned</span>
                        }
                        - @locker.DaysSinceLastUse.ToString("F1") days ago
                    </div>
                }
            </div>
        </div>

        <div class="group-cards-grid">
        @foreach (var group in Model.Groups.Where(g => g.TotalLockers > 0))
        {
            <div class="group-card">
                <h2>@group.Name (@group.Function)</h2>
                <div class="stats">
                    <div class="stat-box" style="width: 100%; margin-bottom: 10px;">
                        <strong>Total:</strong><br/> @group.TotalLockers
                    </div>
                    <div style="display: flex; gap: 10px;">
                        <div class="stat-box" style="flex: 1;">
                            <strong>Assigned:</strong><br/> @group.AssignedLockers (@group.AssignmentPercentage.ToString("F1")%)
                        </div>
                        <div class="stat-box" style="flex: 1;">
                            <strong>Unassigned:</strong><br/> @group.UnassignedLockers (@((100 - group.AssignmentPercentage).ToString("F1"))%)
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>
    </div>

    <script>
        let lastKnownUpdate = '@Model.LastUpdated.ToString("o")';
        let refreshPeriod = @ViewBag.WebRefreshPeriodMs;
        setInterval(function() {
            fetch('/LockerAnalytics/LastUpdated')
                .then(response => response.json())
                .then(data => {
                    if (data.lastUpdated !== lastKnownUpdate) {
                        location.reload();
                    }
                });
        }, refreshPeriod); // use the value from config
    </script>
</body>
</html> 